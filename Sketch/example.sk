def microchannel {

def len 4

def p1 (-len,-1,-1) def p2 (len,-1,-1)
def p3 (len,1,-1) def p4 (-len,1,-1)
def p5 (-len,-1,1) def p6(len,-1,1)
def p7 (-len,1,1) def p8(len,1,1)
def rad 0.8
def cent1 (-len,rad,0)
def cent2 (0.0,rad,0)
def sphere1 (0.0,0.0,0.0)
def sphere2 (0.0,rad,0.0)
% faces of the tetrahedron.
polygon[cull=false,fill=none](p1)(p2)(p3)(p4) % original front polygon
polygon[cull=false,fill=none](p1)(p5)(p6)(p2) % bottom
polygon[cull=false,fill=none](p4)(p7)(p8)(p3) % left
polygon[cull=false,fill=none](p5)(p6)(p8)(p7) % rear


def n_cyl_segs 20  def n_views 5  
def I [1,0,0] def J [0,1,0] def K [0,0,1] % canonical unit vectors
def endopts [fillcolor=lightgray]
% repeat { n_views, rotate(180/n_views, [I]) then translate([I] * 2.1) } 
sweep[endopts]{ n_cyl_segs<>, rotate(360/n_cyl_segs, [1,0,0]) } 
      line[fillcolor=white](cent1)(cent2) %(-1,1)(1,1)
def joint_rad 1
def joint_sphere {
    def n_joint_faces 18
    sweep [fillcolor=red] { n_cyl_segs, rotate(360.0 / n_cyl_segs, [I]) }
      sweep { n_joint_faces, rotate(-180.0 / n_joint_faces,[K]) } 
        (sphere2) %line(sphere1)(sphere2)
}
def axes {
    def shift (0.0,-0.5,0.0)
    def arr1 (-len,-1.5,-1)
    def arr2 (-len,-1.5,1)
    def arr3 (len,-1.5,1)
    def arr4 (-len-0.5,-1,-1)
    def arr5 (-len-0.5,1,-1)
    %def arr2 (p5)+(shift)
    line[line style=dashed] (p1)(arr1)
    line[line style=dashed] (p5)(arr2)
    line[line style=dashed] (p6)(arr3) 
    line[line style=dashed] (p4)(arr5)
    line[line style=dashed] (p1)(arr4)
    line[arrows=<->,line width=1.5pt] (arr2)(arr3)
    line[arrows=<->,line width=1.5pt] (arr1)(arr2)
    line[arrows=<->,line width=1.5pt] (arr4)(arr5)
    line[arrows=->,line width=2pt] (rad,0,0)(rad+1,0,0)
    %def sz 1
    %line [arrows=<->,linewidth=4pt] (sz,0,0)(0,0,0)(0,sz,0)
    %line [arrows=->]  (0,0,0)(0,0,sz)
    %line [linewidth=.2pt,linecolor=blue,linestyle=dashed] (0,0,0)(0,0,-10)
    %special |\uput[r]#1{$x$}\uput[u]#2{$y$}\uput[l]#3{$z$}|
    %  (sz,0,0)(0,sz,0)(0,0,sz)
}

def p1_center (-len-1.0,0.0,-1.0)
def p2_center (-len-0.5,-1.75,0.5)
def p3_center (1.0,-2.3,-1.0)
def p4_center (rad+1.0,0.35,0)
def square_center (-len,0,0)

special |\node at #1 {$P_{in}$};|
    (square_center)

special |\node at #1 {$H$}; |
    (p1_center) 

special |\node at #1 {$W$}; |
    (p2_center) 

special |\node at #1 {$L$}; |
    (p3_center)

special |\node at #1 {$\displaystyle U_{\mathrm{bubble}}$};| 
    (p4_center)

    
    %(p2)(p3)(p4)
         %\uput[r]#2{$P2$}
         %\uput[u]#3{$P3$}
         %\uput[d]#4{$P4$}|


{axes}

{joint_sphere}

 
}
%{microchannel}  % tetrahedron in original position
%put { rotate(30, (0,0,0), unit([1,1,0])) } {microchannel}
def eye (-5,2,10)
def look_at (0,0,0)
  put { view((eye), (look_at)) } {microchannel}


global { language tikz }
